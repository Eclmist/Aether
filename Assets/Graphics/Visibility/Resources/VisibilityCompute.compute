#pragma kernel ComputeVisibility
#pragma kernel VisibilityUpdate
#pragma kernel ResetVisibility

RWTexture2D<float4> WorldVisibilityResult;

float2 ModifierPosition;
float TargetVisibility;
float ModifierRadius;
float UpdateSpeed;

[numthreads(8,8,1)]
void ComputeVisibility(uint2 id : SV_DispatchThreadID)
{
    float2 offsetFromCenter = id - ModifierRadius;
    uint2 writePos = ModifierPosition + offsetFromCenter;
    float t = 1 - saturate(length(offsetFromCenter) / ModifierRadius);

    float4 currentVal = WorldVisibilityResult[writePos];
    float targetRVal = t * TargetVisibility;
    float writeVal = max(currentVal, lerp(currentVal.r, targetRVal, UpdateSpeed));

    WorldVisibilityResult[writePos] = float4(writeVal, currentVal.gba);
}

[numthreads(8,8,1)]
void VisibilityUpdate(uint2 id : SV_DispatchThreadID)
{
    uint2 writePos = id;
    float4 currentVal = WorldVisibilityResult[writePos];
    currentVal.g = lerp(currentVal.g, currentVal.r, UpdateSpeed);
    WorldVisibilityResult[writePos] = currentVal;
}

[numthreads(8,8,1)]
void ResetVisibility(uint2 id : SV_DispatchThreadID)
{
    WorldVisibilityResult[id].rgba = TargetVisibility;
}
